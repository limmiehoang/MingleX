# ===============================
# = JSP
# ===============================
spring.mvc.view.prefix:/WEB-INF/jsp/
spring.mvc.view.suffix:.jsp

# ===============================
# = Storage upload file
# ===============================
spring.servlet.multipart.max-file-size=128KB
spring.servlet.multipart.max-request-size=128KB
spring.http.multipart.enabled=false
storage.location=upload-dir

# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.url=jdbc:mysql://minglex-mysql:3306/minglexdb?useSSL=false
spring.datasource.username=root
spring.datasource.password=1
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# ===============================
# = Liquibase
# ===============================
spring.liquibase.change-log=classpath:/db/db.changelog-master.xml

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

# ==============================================================
# = Security settings
# ==============================================================

#=====---- Store Password ----=====
# 4 main types to store password in db
# Plain: Plain text
# Hash: use SHA256
# SaltHash: use SHA256 with Per_User_Salt string
# BCrypt
security.store-password-solution=${SEC_STORE_PASSWORD_SOLUTION:Plain}

#=====---- SQL Injection ----=====
# Turn SQL Injection vulnerability on or off at Login page and profile page
# False = no protection, SQLi is exploitable
# True = protection, SQLi not exploitable
security.sql-injection=${SEC_SQL_INJECTION:False}

#=====---- Stored XSS ----=====
# Turn Stored XSS on or off when setting status at profile page and explore page
# False = no protection
# True = protection (HTML Escape)
security.stored-xss = ${SEC_STORED_XSS:None}

#=====---- Session Fixation ----=====
# Turn Session Fixation on or off
# False = no protection, Session Fixation is exploitable
# True = protection, Session Fixation is not exploitable
security.session-fixation = ${SEC_SESSION_FIXATION:True}

#=====---- Reflected XSS ----=====
# Turn Reflected XSS on or off at search page
# False = no protection
# True = protection
security.reflected-xss = ${SEC_REFLECTED_XSS:False}

#=====---- CSRF Prevention ----=====
# Turn CSRF Prevention on or off
# False = no protection
# True = protection
security.csrf = ${SEC_CSRF:False}
